name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request: {}

env:
  UV_PYTHON: 3.13
  UV_FROZEN: "1"

jobs:
  test-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - run: |
          mkdir foobar
          echo "VERSION = '1.0a1'" > foobar/version.py
          touch /app/output1.txt

      - run: uv run main.py
        env:
          # we can't use GITHUB_REF, so we use the backup var name
          INPUT_TEST_GITHUB_REF: refs/tags/v1.0.0a1
          INPUT_VERSION_FILE_PATH: foobar/version.py
          ALT_GITHUB_OUTPUT: /app/output1.txt

      - run: cat output1.txt
      - run: grep -q 'IS_PRERELEASE=true' output1.txt
      - run: grep -q 'VERSION=1.0a1' output1.txt

      - run: echo "VERSION = '1.1.1'" > foobar/version.py
      - run: touch /app/output2.txt
      - run: uv run main.py
        env:
          INPUT_SKIP_ENV_CHECK: true
          INPUT_VERSION_FILE_PATH: foobar/version.py
          ALT_GITHUB_OUTPUT: /app/output2.txt

      - run: cat output2.txt
      - run: grep -q 'IS_PRERELEASE=false' output2.txt
      - run: grep -q 'VERSION=1.1.1' output2.txt

  test-action:
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir mypackage
          echo "__version__ = 'v1.0post1'" > mypackage/version.py

      - uses: samuelcolvin/check-python-version@main
        id: check-python-version
        with:
          version_file_path: mypackage/version.py
          test_github_ref: refs/tags/1-post1

      - run: test ${{ steps.check-python-version.outputs.IS_PRERELEASE }} == 'false'
      - run: test ${{ steps.check-python-version.outputs.VERSION }} == '1.0.post1'
